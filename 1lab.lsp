;1.Напишите сложную функцию, используя композиции функций CAR и CDR, которая
;возвращает атом * при применении к следующему списку:(1 (((2 3) (4 5) *) (6)))
(print (
cadr (cdaadr '(1 (((2 3) (4 5) *) (6))))
)) 

;2.Объясните работу функций и определите результат обращения:(list '(a b) 7 '(()))
(print (
list '(a b) 7 '(())
))

;3.Из атомов 1, 2, 3, nil создайте указанные списки двумя способами:(1 (2) 3)
;а. с помощью композиций функций CONS;
;б. с помощью композиций функций LIST.

(print (
cons 1 (cons (cons 2 nil) (cons 3 nil))
)) 

(print (
list 1 (list 2) 3
)) 

;4.С помощью DEFUN определите функцию, которая возвращает измененный список по
;заданию (в теле функции разрешается использовать только следующие встроенные
;функции: CAR, CDR, CONS, APPEND, LIST, LAST, BUTLAST с одним аргументом).
;Проверьте её работу, организуя обращение к функции со списками разной длины.
;2.Функция меняет местами первый и второй элементы списка

(defun swap-first-and-second (l) (
if (null l) nil
(if (null (cdr l)) l
(append
(cons (cadr l) (cons (car l) (cddr l) ))
)
)
))

(print (swap-first-and-second '()))
(print (swap-first-and-second '(1)))
(print (swap-first-and-second '(1 2 3 4 5)))